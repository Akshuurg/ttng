#map read bundles/TTMap/map.map;
#map goto 1;
#var MAPPER_SYNC 0;
#map flag unicodegraphics on;
#map flag static on;
#map flag vtmap off;
#map legend 48 <FAA>#<088>;

#alias {move_n} {#send n;#var trytomove 1;#var movedir {polnoc}};
#alias {move_s} {#send s;#var trytomove 1;#var movedir {poludnie}};
#alias {move_e} {#send e;#var trytomove 1;#var movedir {wschod}};
#alias {move_w} {#send w;#var trytomove 1;#var movedir {zachod}};
#alias {move_d} {#send d;#var trytomove 1;#var movedir {dol}};
#alias {move_u} {#send u;#var trytomove 1;#var movedir {gora}};
#alias {move_ne} {#send ne;#var trytomove 1;#var movedir {polnocny-wschod}};
#alias {move_nw} {#send nw;#var trytomove 1;#var movedir {polnocny-zachod}};
#alias {move_sw} {#send sw;#var trytomove 1;#var movedir {poludniowy-zachod}};
#alias {move_se} {#send se;#var trytomove 1;#var movedir {poludniowy-wschod}};

#alias {n} {move_n};
#alias {s} {move_s};
#alias {ne} {move_ne};
#alias {nw} {move_nw};
#alias {sw} {move_sw};
#alias {se} {move_se};
#alias {d} {move_d};
#alias {u} {move_u};
#alias {w} {move_w};
#alias {e} {move_e};


#nop #################################################################################;
#nop EVENTY GMCP;
#nop #################################################################################;
#event {IAC SB GMCP room.info IAC SE} {
    #var roza_custom {};
    #var ROOM_INFO {%0};
    #var room_desc ${ROOM_INFO[map][x]}x${ROOM_INFO[map][y]};
    #var room_info_hybrid $ROOM_INFO;
    #var b {0};

    #var rozk2 {{w}{ }{e}{ }{n}{ }{s}{ }{nw}{ }{ne}{ }{se}{  }{sw}{  }{u}{ }{d}{ }{wyjscie}{   }{nw2}{ }{n2}{   }{ne2}{   }{w2}{ }{e2}{ }{sw2}{   }{s2}{   }{se3}{   }};

    #foreach {$ROOM_INFO[exits]} {i}
    {
      #switch {"$ROOM_INFO[exits][$i]"}
      {
        #case {"polnoc"} {#math {b} {$b + 1};#var {rozk[n]} { |};#var {rozk2[n]} {|};#var {rozk[n2]}{ N };};
        #case {"polnocny-wschod"} {#math {b} {$b + 1};#var {rozk2[ne]} {/};#var {rozk[ne]} {/  };#var {rozk[ne2]}{ NE};};
        #case {"polnocny-zachod"} {#math {b} {$b + 1};#var {rozk2[nw]} {\\};#var {rozk[nw]} {  \\};#var {rozk[nw2]}{NW };};
        #case {"poludnie"} {#math {b} {$b + 1};#var {rozk2[s]} {|};#var {rozk[s]} { |};#var {rozk[s2]}{ S };};
        #case {"poludniowy-wschod"} {#math {b} {$b + 1};#var {rozk2[se]} {\\ };#var {rozk[se]} {\\  };#var {rozk[se2]}{ SE};};
        #case {"poludniowy-zachod"} {#math {b} {$b + 1};#var {rozk2[sw]} { /};#var {rozk[sw]} {  /};#var {rozk[sw2]}{SW };};
        #case {"wschod"} {#math {b} {$b + 1};#var {rozk2[e]} {-};#var {rozk[e]} {---};#var {rozk[e2]}{E};};
        #case {"zachod"} {#math {b} {$b + 1};#var {rozk2[w]} {-};#var {rozk[w]} {---};#var {rozk[w2]}{W};};
        #case {"dol"} {#math {b} {$b + 1};#var {rozk2[d]} {V}};
        #case {"gora"} {#math {b} {$b + 1};#var {rozk2[u]} {A}};
        #default {
            #format defexitlen {%L} {$ROOM_INFO[exits][$i]};
            #if {$defexitlen > 2} {
                #var roza_custom {$ROOM_INFO[exits][$i]};
                #nop line substitute {variables} {#macro {\eOn} {$ROOM_INFO[exits][$i]};};
            };
        };
      };
    };

    
    #if {$profiles_roza == 3} {
        #map map 30x15;
    };
    #if {$frozen_status == 1} {
        frozen_unset;
    };

    #if {$semifrozen_status == 1} {
        #math {semifrozen_steps} {$semifrozen_steps - 1};
        #if {$semifrozen_steps < 1} {
            semifrozen_unset;
        };
    };
    #if {$ROOM_INFO[map][x] > 0} {
        #var current_room_short_desc {$ROOM_INFO[map][name] $ROOM_INFO[map][x] $ROOM_INFO[map][y]};
    };

    #if {$trytomove > 0} {
        #var trytomove 0;
        #map get roomvnum roomId;
   };
};

#event {MAP ENTER ROOM} {
    #var r_curLineCnt 2;
    #map get roomvnum voom;
    #map get roomsymbol {voos_num};
    #var note_found 0;
    #var bind_found 0;
    #if {"$voos_num" == "<178>i<088>"} {
        #var note_found 1;
    };
     #if {$cport > 0} {
            #mapka {GOTO $voom};
     };
};

#nop #################################################################################;
#nop ODNAJDYWANIE SIE NA MAPIE
#nop #################################################################################;
#action {Schodzisz z %1.} {#var MAPPER_SYNC {0};}
#action {Oplacasz podroz u woznicy i wsiadasz do %1.} {#var MAPPER_SYNC {0}};
#action {Wykonuje komende 'idz %1'} {#var MAPPER_SYNC {0};}
#action {Bierzesz rozbieg i zeskakujesz z drakkara na brzeg.} {#var MAPPER_SYNC {0};}

    #nop ##################################;
    #nop funkcja szukajaca;
    #nop map list <name> <exits> <desc> <area> <note> <terrain>;
    #nop ##################################;
#var current_room_short_desc {unknown2};
#var current_room_exits {unknown2};
#alias {/f$} {findme} {1}?; 
#nop alias findme {#echo a};
#alias findme {
        #map get roomvnum rmvnum;
        #var widocznewyjscia {$ROOM_INFO[exits]};
        #var exitList {};
        #var vexits {};

        #var roomfound 0;

    #nop ##################################;
    #nop szukaj pokoju wedlug jego opisu
    #nop w lokacjach gmcp, opis jest koordynata
    #nop w reszcie lokacji, ostatnio widziany short w danej lokacji
    #nop
    #nop jesil jest jeden rezultat, przenies mape
    #nop ##################################;

        #nop var k @_print_warn{Szukam pokoju <118><aff>$current_room_short_desc<088>};
        #map list {} {} {$current_room_short_desc} {variable} {vexits};
 	#list vexitslist create {$vexits};
 	#list vexitslist {size} {listsize};
        #if {$listsize == 2} {
            #var roomfound {1};
            #if {$vexitslist[1] != $rmvnum} {
                #ec {Odnalazlem mapke na: $vexitslist[1]<088>};
                #map goto $vexitslist[1];
            #nop map map ${screen_w}x15;
                #var roomId $vexitslist[1];
                #var MAPPER_SYNC $vexitslist[1];
                #map get roomdata tmproomdata;
            };
        };

    #nop ##################################;
    #nop szukamy pokoju wedlug opisu i dostepnych wyjsc
    #nop ##################################;

    #if {$roomfound == 0} {
        #var vexits {};
        #list vexitslist clear;
        #map list {$current_room_exits} {} {$current_room_short_desc} {variable} {vexits};
 	#list vexitslist create {$vexits};
        #list vexitslist {size} {listsize};
        #list vexitslist_filter clear;
        #var velf 0;

        #if {$listsize == 2} {
            #var roomfound {1};
            #if {$vexitslist[1] != $rmvnum} {#ec {Odnalazlem mapke na: $vexitslist[1]<088>};#map goto $vexitslist[1];#var roomId $vexitslist[1];#var MAPPER_SYNC $vexitslist[1]};
            #var MAPPER_SYNC $vexitslist[1];        
        };
        #if {$listsize > 2} {
            #if {$listsize < 4} {
                #echo {%s} {Znalazlem pokoj <118><ffa>$current_room_short_desc<088> z wyjsciami na: <118><aff>$current_room_exits<088> $listsize razy.<088>};
                
                #var nearestexitdistance 100000;
                #var nearestroomid $rmvnum;
                #foreach {$vexits[]} {exitvector} {
                    #sh $exitvector $vexits[$exitvector];
                    #if {$vexits[$exitvector] < $nearestexitdistance} {
                        #var nearestexitdistance $vexits[$exitvector];
                        #var nearestroomid $exitvector;
                    };
                };
                #if {$nearestroomid != $rmvnum} {
                    #ec {Odnalazlem mapke na: $nearestroomid<088>};
                    #map goto $nearestroomid;
                    #var roomId $nearestroomid;
                    #var MAPPER_SYNC $nearestroomid;
                    #map get roomdata tmproomdata;
                };
            };
        };
    };
};

#alias undo {
    #if {$trytomove == 1} {
        #map undo;
        #map goto $roomId;
        #var trytomove 0;
    };
    #if {$semifrozen_status == 1} {
        semifrozen_unset;   #nop wracam do zwyklego trybu;
        #undelay {PATH %*}; #nop zatrzymuje reszte komendy;
    };
}

#action {mapka chats to everyone, 'WALK %d'} {#map run {%1} {0.50}};

#nop ################################################################;
#nop ################################################################;
#nop ################################################################;
#nop ################################################################;

#mapka #alias {GOTO %d} {#port send $connectorId {GOTO %1};};
#mapka #action {<PORT> Connection made to %S.} {
    #var connectorId %1;
    #line substitute {variables} {
        #rpg #var mapkaId %1;
    };

};
#mapka #action {<PORT> WALK %d} {#line substitute {variables} {#rpg #map run {%1} {0.5}}};
