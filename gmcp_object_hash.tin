#var gildie[CN] {n};
#var gildie[CKN] {n};
#var gildie[ES] {n};
#var gildie[GL] {n};
#var gildie[GP] {n};
#var gildie[KG] {n};
#var gildie[KGKS] {n};
#var gildie[KM] {n};
#var gildie[KS] {n};
#var gildie[LE] {n};
#var gildie[MC] {n};
#var gildie[NA] {n}; #nop KG;
#var gildie[NPC] {n};
#var gildie[OHM] {n};
#var gildie[OK] {n};
#var gildie[OS] {n};
#var gildie[PE] {n};
#var gildie[RA] {n};
#var gildie[SC] {n};
#var gildie[SGW] {n};
#var gildie[TW] {n}; #nop LE;
#var gildie[VR] {n};
#var gildie[WKS] {n};
#var gildie[ZH] {n};
#var gildie[ZS] {n};
#var gildie[ZT] {n};

#event {IAC SB GMCP objects.nums IAC SE}
{
	#var {obnu} {%0};
	#foreach {$duch[]} {bubu} {
		#list {obnu} find {$bubu} {vfob};
		#if {"$vfob" == "0"} {
			#unvar {duch[$bubu]};
         	}; 
    	};
    assign_type;
    szukaj_wroga;
    szukaj_team;
    tabela_odswiez;
#if {$unfolded > 0} {
        	render_h2;
	};

}

#event {IAC SB GMCP objects.data IAC SE}
{
  #var {obda} {%0};
  #foreach {$obda[]} {vob} {
    #foreach {$obda[$vob][]} {bubu} {
      #var {duch[$vob][$bubu]} {$obda[$vob][$bubu]};
    };
  };
    assign_type;
    szukaj_wroga;szukaj_team;
    tabela_odswiez;
#if {$unfolded > 0} {
        	render_h2;
	};

}


#nop ###################################################################;
#nop dla kazdej postaci w tablicy przypozadkuj dany typ;
#alias {assign_type} {
 #list wrogi {clear};
 #var wrogi_index 0;
     #var neut_index 0;
    #list neut {clear};
	    #var team_index 0;
    #list team {clear};

    #format {screenrows} {%R};
    #var localcnt {1};
    #foreach {$duch[]} {dudu} {
            #var duch[$dudu][shown] {0};
            #if {"$duch[$dudu][avatar]" == "true"} {
                #var avatarid {$dudu};
                #var duch[$dudu][desc] {$AVATAR_NAME};
            } {

            #var test {$duch[$dudu][desc]};
            #replace test { } {_};
            #var test {${test}_};
            #line {substitute} {variables} {
        #nop ENEMIES;
                #if {"$gildie[$postac[$test][gildia]]" == "w"} {
                    #var duch[$dudu][typ] {wrog};
                    #var duch[$dudu][enemy] {true};
                };
            };
            #nop sprawdzamy czy to imie, jesli tak to znaczy ze to short;
            #nop w takim wypadku szukamy flagi cached na imieniu;
            #format {gncheck} {%L} {$postac[$test][imie]};
            #format {excheck} {%L} {$postac[$test][gildia]};
            #var tmpimie {};
            #var imietype {};
            #var tmpim {};
            #var confirmed {};
	    #var tmpimietype 0;
            #if {$gncheck > 1} {
                #var confirmed {$postac[$postac[$test][imie]][cached]};
                #var tmpim $postac[$test][imie];
                #var tmpimie {$gildie[$postac[$test][gildia]] $postac[$test][gildia] $postac[$test][imie] $duch[dudu][desc]};
		#var tmpimietype 1;
            } {
                #var confirmed {$postac[$test][cached]};
                #var tmpim $test;
                #var tmpimie {$gildie[$postac[$test][gildia]] $postac[$test][gildia] $test};
		#var tmpimietype 2;
            };
            #if {"$confirmed" == "true"} {
                #nop;
            } {
                #if {$excheck > 0} {
                    #var postac[$tmpim][cached] {true};

                    #if {"$duch[$dudu][avatar]" == "true"} {
                        #nop;
                    } {
			#if {"$tmpimietype" == "1"} {
				#nop;
				#var dudu2 {%n} {$duch[$dudu][desc]};
				#line substitute variables {
				#sub {$duch[$dudu][desc]} {$duch[$dudu][desc]($postac[$test][gildia]};
				#sub {$dudu2} {$dudu2($postac[$test][gildia]};
				};
			};
			#if {"$tmpimietype" == "2"} {
				#line substitute variables {
					#sub {$duch[$dudu][desc]} {$duch[$dudu][desc]($postac[$test][gildia])};
					#high {$duch[$dudu][desc]($postac[$test][gildia])} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
				};
			};
                    };
                };
            };
            
	    #var duch[$dudu][rownr] {$localcnt};
            #var rowmap[$rcnt] {$dudu};
            #math {localcnt} {$localcnt + 1};

	    };

	
	    #if {"$duch[$dudu][enemy]" == "true"} {
            #math wrogi_index {$wrogi_index + 1};
            #list wrogi {insert} {$wrogi_index} {$dudu};
        };
		#if {"$duch[$dudu][team]" == "false"} {
            #if {"$duch[$dudu][enemy]" == "false"} {
                #math neut_index {$neut_index + 1};
                #list neut {insert} {$neut_index} {$dudu};
            };
        };
        #if {"$duch[$dudu][team]" == "true"} {
            #math team_index {$team_index + 1};
            #list team {insert} {$team_index} {$dudu};
        };

    };
};

#var emptyline {                                                                                           };
#alias {render_h2} {
	#if {$r_curLineCnt < 2} {
  		#loop {1} {$screen_r_half} {bubu} {#sh {$emptyline} {-$bubu}};
  	} {
		#math {r_curLineCnt} {$r_curLineCnt - 1};
  		#loop {1} {$r_curLineCnt} {bubu} {#sh {$emptyline} {-$bubu}};
  	};
    #var r_curLineCnt {1};

    #list team_offenders cle;
    #list team_offenders cre;
    #foreach {$duch[]} {du} {#var duch[$du][shown] {0}};
    #list team siz ts;

    #if {$ts < 1} {

        #if {$duch[$avatarid][attack_num] > 0} {
            #list team_offenders add {$duch[$avatarid][attack_num]};
        } {
        #nop sh {$duch[$avatarid][bar][orc]};
            #sh {$duch[$avatarid][bar][orc]} {-$r_curLineCnt};
            #math r_curLineCnt {$r_curLineCnt + 1};
            #var duch[$avatarid][shown] {1};
        };

    } {

        #foreach {$team[]} {ti} {
            #if {$duch[$team[$ti]][shown] < 1} {
                #if {$duch[$team[$ti]][attack_num] > 0} {
                    #list team_offenders add $duch[$team[$ti]][attack_num];
                } {
                #nop sh {$duch[$team[$ti]][bar][orc]};
                    #sh {$duch[$team[$ti]][bar][orc]} {-$r_curLineCnt};
                    #math r_curLineCnt {$r_curLineCnt + 1};
                    #var duch[$team[$ti]][shown] {1};
                };
            };
                #nop var duch[$team[$ti]][shown] {1};
        };

    };


#nop PRZECIWNICY DRUZYNY LUB AVATARA;
    #foreach {$team_offenders[]} {to} {
        #var tmpnavigator {1};
        #foreach {$duch[]} {ti} {
            #if {$duch[$ti][shown] < 1} {

                #if {"$duch[$ti][attack_num]" == "$team_offenders[$to]"} {
                    #if {$tmpnavigator == 1} {
                        #var tmpnavigator 0;
                    #nop sh {$duch[$ti][bar][orc] ${c_stan_niski}---><088> $duch[$duch[$ti][attack_num]][bar][orc]};
                        #sh {$duch[$ti][bar][orc] ${c_stan_niski}---><088> $duch[$duch[$ti][attack_num]][bar][orc]} {-$r_curLineCnt};

                        #math r_curLineCnt {$r_curLineCnt + 1};
                        #var duch[$team_offenders[$to]][shown] {1};
                    } {
                    #nop sh {$duch[$ti][bar][orc] ${c_stan_niski}_/};
                        #sh {$duch[$ti][bar][orc] ${c_stan_niski}_/} {-$r_curLineCnt};
                        #math r_curLineCnt {$r_curLineCnt + 1};
                    };
                    #var duch[$ti][shown] {1};
                };
            };
        };  
    };

#nop RESZTA WALCZACYCH WROGOW;
    #foreach {$wrogi[]} {to} {
        #if {$duch[$wrogi[$to]][shown] < 1} {
        #nop sh {                                            $duch[$wrogi[$to]][bar][orc]};
            #sh {                                  $duch[$wrogi[$to]][bar][orc]} {-$r_curLineCnt};
            #math r_curLineCnt {$r_curLineCnt + 1};
            #var duch[$wrogi[$to]][shown] {1};
        };
    };

#nop WROGOWIE niewalczacy;
    #foreach {$wrogi[]} {wr} {
        #if {$duch[$wrogi[$wr]][shown] < 1} {
            #if {$duch[$wrogi[$wr]][attack_num] > 0} {
                #echo { };
            } {
            #nop sh {$duch[$wrogi[$wr]][bar][hug]} {$r_curLineCnt};
                #sh {$duch[$wrogi[$wr]][bar][hug]} {$r_curLineCnt} {-$r_curLineCnt};
                #math r_curLineCnt {$r_curLineCnt + 1};
                #var duch[$wrogi[$wr]][shown] {1};
            };
        };
    };
#nop RESZTA wszystkiego gdzie shown == 0;
    #foreach {$duch[]} {wr} {
        #if {$duch[$wr][shown] < 1} {
        #nop sh {                                            $duch[$wr][bar][orc]};
            #sh {                                  $duch[$wr][bar][orc]} {-$r_curLineCnt};

            #math r_curLineCnt {$r_curLineCnt + 1};
            #var duch[$wr][shown] {1};
        };
    };
    
};


#alias {szukaj_wroga}
{
    #nop ##############;
    #nop buduje liste wrogow;
    #nop ##############;
    #list wrogi size {wros};

    #var wrog_najslabszy 0;
    #var wrog_najslabszy_hp 10;
    #var wrog_najslabszy_cnt 0;
    #var wrog_sugerowany 0;

#nop szukamy wroga gildii, najlsbaszego;
    #foreach {$wrogi[]} {www} {
        #if {"$duch[$wrogi[$www]][typ]" == "wrog"} {
        #nop jesli obaj sa rownie ranni, bijemy tego ktory jest atakowany przez wiekszosc;
            #if {$duch[$wrogi[$www]][hp] == $wrog_najslabszy_hp} {
                #if {$duch[$wrogi[$www]][enemies] > $wrog_najslabszy_cnt} {
                    #var wrog_najslabszy $wrogi[$www];
                    #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                    #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
                };
            };
            #if {$duch[$wrogi[$www]][hp] < $wrog_najslabszy_hp} {
                #var wrog_najslabszy $wrogi[$www];
                #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
            };
        };
    };

#nop jesli nie znalezlismy najslabszego z wrogow gildii;
#nop szukamy najslabszego z wrogow;
    #if {$wrog_najslabszy_hp > 9} {
        #foreach {$wrogi[]} {www} {
            #nop jesli obaj sa rownie ranni, bijemy tego ktory jest atakowany przez wiekszosc;
            #if {$duch[$wrogi[$www]][hp] == $wrog_najslabszy_hp} {
                #if {$duch[$wrogi[$www]][enemies] > $wrog_najslabszy_cnt} {
                    #var wrog_najslabszy $wrogi[$www];
                    #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                    #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
                };
            };

            #if {$duch[$wrogi[$www]][hp] < $wrog_najslabszy_hp} {
                #var wrog_najslabszy $wrogi[$www];
                #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
            };
        }
    };

#nop jesli nie jestesmy dowodca druzyny i jest ustawiony cel ataku;
#nop nadpisujemy wybor wroga;
    #if {"$duch[$avatarid][team_leader]" == "false"} {
        #foreach {$wrogi[]} {www} {
            #if {"$duch[$wrogi[$www]][attack_target]" == "true"} {
                #var wrog_najslabszy $wrogi[$www];
                #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
            };
        };
    };

#nop wrzucamy sugerowanego F1 do atrybutow;
    #if {$wrog_najslabszy_hp < 10} {
        #nop TO REDO;
        #var wrog_sugerowany $wrog_najslabszy;
        #var duch[$wrog_najslabszy][bot] {SA1};

	#macro {$KEY_F1} {_zabij_ ob_$wrog_najslabszy};
    };
}



#alias {szukaj_team}
{
    #list team size {teas};
    #var team_najslabszy 0;
    #var team_najslabszy_hp 10;
    #var team_najslabszy_cnt 0;
    #var team_sugerowany 0;
    #var team_celobrony 0;

    #foreach {$team[]} {www} {
        #if {$duch[$team[$www]][enemies] > 0} {
            #if {$duch[$team[$www]][hp] == $team_najslabszy_hp} {
                #if {$duch[$team[$www]][enemies] > $team_najslabszy_cnt} {
                    #var team_najslabszy $team[$www];
                    #var team_najslabszy_hp $duch[$team[$www]][hp];         
                    #var team_najslabszy_cnt $duch[$team[$www]][enemies];                           
                };
            };

            #if {$duch[$team[$www]][hp] < $team_najslabszy_hp} {
                #var team_najslabszy $team[$www];
                #var team_najslabszy_hp $duch[$team[$www]][hp];         
                #var team_najslabszy_cnt $duch[$team[$www]][enemies];                           
            };
        };
    }

    #if {$team_najslabszy_hp < 10} {
        #var duch[$team_najslabszy][bot] {SO1};
        #var team_sugerowany $team_najslabszy;
	#macro {$KEY_F2} {
		zaslon ob_$team_najslabszy;
        #if {"$pzdjeciezaslon" == "auto"} {
            przestan zaslaniac;
        };
	};
    };

    #nop jesli nie jestesmy dowodca druzyny i jest ustawiony cel obrony;
    #nop nadpisujemy wybor sugerowanego do obrony;
    #if {"$duch[$avatarid][team_leader]" == "false"} {
        #foreach {$team[]} {www} {
            #if {"$duch[$team[$www]][defence_target]" == "true"} {
		#var duch[$team[$www][bot] {SO2};
		#macro {$KEY_F4} {
			zaslon ob_$team[$www];
        		#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac};
		};
            };
        };
    };

    
}

#alias {tabela_odswiez} {
    #var maxLinesPerType {};

    #list wrogi size {wros};
    #list neut size {neus};
    #list team size {teas};
    #var negativecounter 1;
    #format windowh {%R};

    #var iterator {0};

    #foreach {$duch[]} {du} {
	#var duch[$du][enemies] {0};
	#var duch{$du][bot] {};
    };
    #foreach {$duch[]} {du} {
        #math iterator {$iterator + 1};
        #if {$duch[$du][attack_num] > 0} {
            #math duch[$duch[$du][attack_num]][enemies] {$duch[$duch[$du][attack_num]][enemies] + 1};
        };
      
        #math indexvalue {96 + $iterator};
        #if {$indexvalue > 122} {
            #var indexvalue {88};  
        };
        #format indexchar {%a} {$indexvalue};
        #var duch[$du][alias_value] {$indexchar};
     
        #line substitute {variables} {#alias k$indexchar {_zabij_ ob_$du}};
        #line substitute {variables} {#alias zp$indexchar {zaslon przed ob_$du}};
        #line substitute {variables} {#alias b$indexchar {zablokuj ob_$du}};
        #line substitute {variables} {#alias p$indexchar {przelam obrone ob_$du}};
        #line substitute {variables} {#alias z$indexchar {zaslon ob_$du;#if {"$profiles_zdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
        #line substitute {variables} {#alias wz${indexchar} {gzwycofaj sie za ob_$du;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
        #line substitute {variables} {#alias z${indexchar}2 {opcje grupa 2;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
        #line substitute {variables} {#alias z${indexchar}3 {opcje grupa 3;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
        #line substitute {variables} {#alias z${indexchar}4 {opcje grupa 4;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
          
        #format tmpna {%-15s} {$duch[$du][desc]};
        #format tmpna {%.15s} {$tmpna};
        #format tmpna_med {%-10s} {$duch[$du][desc]};
        #format tmpna_med {%.10s} {$tmpna_med};
        #format tmpna_orc {%-15s} {$duch[$du][desc]};
        #format tmpna_orc {%.15s} {$tmpna_orc};

        #var tmpna_sma {};
        #var tmphp {$healthbars2[$duch[$du][hp]]};
        #var tmpcel {   };
        #var tmpava {  };
        #var tmpsug {   };
        #var tmpkol {<088>};
        #var tmpled { };
        #if {$healthbars2[$duch[$duch[$du][attack_num]][hp]] > 0} {
            #format attacktargetdesc {%-10s} {$duch[$duch[$du][attack_num]][desc]};
            #var attacktargethp {-<148>><158>><168>><138>> <088>[$healthbars2[$duch[$duch[$du][attack_num]][hp]]] $attacktargetdesc};
        } {
            #var attacktargethp { };
        };
        #nop  {-<148>><158>><168>><138>> [$attacktargethp] $duch[$duch[$du][attack_num]][desc]};
        #var tmptar {};

        #var tmpen {  };
        #if {$duch[$du][enemies] < 1} {
            #var tmpen {[  ]};
        };
        #else {
            #format tmpen {%+2s} {<118>$duch[$du][enemies]<088>};
            #var tmpen {[$tmpen]};
        };

        #if {"$duch[$du][enemy]" == "true"} {#var tmpkol {<118>}};
        #if {"$duch[$du][team]" == "true"} {#var tmpkol {<148>}};
        #if {"$duch[$du][typ]" == "wrog"} {#var tmpkol {<FAA><178>}};
        #if {"$duch[$du][typ]" == "boss"} {#var tmpkol {<118><fca>}};

        #if {"$duch[$du][attack_target]" == "true"} {#var tmpcel {CEL};#var tmpkol {<FAC><178>}};
        #if {"$duch[$du][defense_target]" == "true"} {#var tmpcel {COB};#var tmpkol {<AAB><178>}};
        #if {"$duch[$du][avatar_target]" == "true"} {#var tmpava {<FAA>  <088>}};
        #nop if {"$duch[$du][avatar]" == "true"} {#var tmpkol {<BAF><178>}};

        #if {"$duch[$du][team_leader]" == "true"} {#var tmpled {<138>*<088>}};
        
        #if {"$duch[$du][team]" == "true"} {
            #format tmpna_orc {%-8s} {$duch[$du][desc]};
            #format tmpna_orc {%.8s} {$tmpna_orc};
        };

        #if {"$duch[$du][bot]" == "SA1"} {#var tmpsug {<128>F1 <088>}};
        #if {"$duch[$du][bot]" == "SA2"} {#var tmpsug {SA2}};
        #if {"$duch[$du][bot]" == "SO1"} {#var tmpsug {SO1}};
        #if {"$duch[$du][bot]" == "SO2"} {#var tmpsug {SO2}};

        #if {"$duch[$du][bot]" == "SO1"} {
            #if {"$duch[$du][avatar]" == "true"} {
                #var tmpsug {<FAA><178>F2<088> };
            } {
                #var tmpsug {<138>F2 <088>};                
            };
        };

        #if {"$duch[$duch[$du][attack_num]][attack_target]" == "true"} {
            #var tmptarcolor {<128>};
        } {
            #var tmptarcolor {<118>};
        };

        #if {$duch[$du][attack_num] > 0} {
            #format tmptar {%-10s} {$duch[$duch[$du][attack_num]][desc]};
            #format tmptar {%.10s} {$tmptar};
            #var tmptar {|$attacktargethp| $tmptarcolor$tmptar<088>};
        };
        #local team_current_prompt_nick {};
        #local enemy_current_prompt_nick {             };

        #var duch[$du][bar][orc] {$duch[$du][alias_value] $tmpsug<088>$tmpava$tmpen [$tmphp]$tmpled$tmpkol$tmpna_orc<088> };

        #math {negativecounter} {$negativecounter + 1};
    };
}



#action {Zapamietane przez ciebie imiona to %* i %2.} {
	#list przedstawieni clear;
	#var str_przedstawieni {%1};
	#replace str_przedstawieni {{, | i }} {;};
	#list przedstawieni create {$str_przedstawieni};

	#foreach {$przedstawieni[]} {przedstawiony} {

			#var test {$przedstawieni[$przedstawiony]};
			#var test {${test}_};

			#format {excheck} {%L} {$postac[$test][gildia]};

			#if {$excheck > 1} {
    				#line substitute variables {
        				#sub {$przedstawieni[$przedstawiony]} {$przedstawieni[$przedstawiony]($postac[$test][gildia])};
				        #high {$przedstawieni[$przedstawiony]($postac[$test][gildia])} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
				};
			};
	};
};


#action {Osoby, ktore zostaly ci ostatnio przedstawione, to %1 i %2.} {
	#list przedstawieni clear;
	#var str_przedstawieni {%1};
	#replace str_przedstawieni {{, | i }} {;};
	#list przedstawieni create {$str_przedstawieni};

	#foreach {$przedstawieni[]} {przedstawiony} {

			#var test {$przedstawieni[$przedstawiony]};
			#var test {${test}_};

			#format {excheck} {%L} {$postac[$test][gildia]};

			#if {$excheck > 1} {
    				#line substitute variables {
        				#sub {$przedstawieni[$przedstawiony]} {$przedstawieni[$przedstawiony]($postac[$test][gildia])};
				        #high {$przedstawieni[$przedstawiony]($postac[$test][gildia])} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
				};
			};
	};
};



